Segregation of Odd & Even Ended
Description

You are given an array, of sizeN

You have to divide the array into two parts,evenandodd, such that all the even elements in the array are present in theeven, while all the odd parts in the array are present in theoddpart

You are given another integerq, which has a value of either1or2

If the value ofq == 1, print all the even elements in the array followed by all the odd elements in the array, otherwise print all the odd elements in the array followed by all the even elements in the array

Note : The relative order of odd and even elements among themselves should be the same as in the original array

Input
The first line of the input containsT, the number of test cases

The next line contains the value ofN

The next line containsNspace separated integers, denoting the values of the array

The last line of each test case contains the value ofq

Constraints

1 <=T<= 10

1 <=N<= 500

1 <=q<= 2


Output
Print the output according to the condition mentioned in the problem statement, for each test case, on a new line

Sample Input 1 

2
5
1 2 3 4 5
1
5
1 2 3 4 5
2
Sample Output 1

2 4 1 3 5
1 3 5 2 4
Hint

In the first sample test case, the value ofq = 1. Therefore, the even numbers are printed first followed by the odd elements, hence the output is2 4 1 3 5
In the second sample test case, the value ofq = 2. Therefore, the odd numbers are printed first followed by the even elements, hence the output is1 3 5 2 4


sol: 

function seperationOfOddEven(N, arr,Q) {
  let even = []
  let odd = []
  for(let i = 0; i<N; i++){
      
      if(arr[i]%2 === 0){
          even.push(arr[i])
      }
      else{
          odd.push(arr[i])
      }
  }
  if(Q==1){
      console.log([...even,...odd].join(" "))
  }
  else{
      console.log([...odd,...even].join(" "))
  }
}