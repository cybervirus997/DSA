Strings with Parenthesis Ended
Description

Given a string containing three types of parenthesis : (), [], {}, write a program to check whether the string contains a valid sequence of parentheses.


Input
Input Format

Input contains one line which is the string with parentheses whose validity you have to check

Constraints

length of string <= 1000


Output
Output Format

Print "balanced" (without quotes) if it has a sequence of valid parentheses, otherwise print "unbalanced" (without quotes)


Sample Input 1 

(((((((((())))))))))
Sample Output 1

balanced
Sample Input 2 

[one[two[three[four[five[six[seven[eight[nine[ten]]]]]]]]]]
Sample Output 2

balanced

Sol:

function runProgram(input) {
  var str = input
  let s = []
  let isbalanced = true
  for(let i=0; i<str.length; i++){
      if(str[i]==="(" || str[i]==="{" || str[i]==="["){
          s.push(str[i])
      }
      else if(str[i]===")" || str[i]==="}" || str[i]==="]"){
          let x = str[i]
          let y = s[s.length - 1]
          if(!check(x,y)){
              isbalanced = false
              break;
          }
          s.pop()
      }
  }
  
  if(s.length === 0 && isbalanced===true){
      console.log("balanced")
  }
  else{
      console.log("unbalanced")
  }
}
function check(x,y){
    if(y==="(" && x===")")return true;
    if(y==="{" && x==="}")return true;
    if(y==="[" && x==="]")return true;
    return false
}